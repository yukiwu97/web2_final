{"version":3,"sources":["components/navbar.component.js","components/chart.component.js","components/record.component.js","components/add-record.component.js","components/update-record.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Charts","props","data","datalist","month","year","total","this","drawChart","countMap","retList","category","forEach","item","amount","count","percentage","push","toFixed","classifiedData","getClassifiedData","console","log","pie","d3","sort","value","d","radius","Math","min","pieSvg","refs","pieChart","append","attr","color","domain","map","name","range","t","length","reverse","arc","innerRadius","outerRadius","arcLabel","data_ready","selectAll","enter","join","centroid","call","text","num","parseInt","getMonth","ref","Record","handleSelectYear","bind","handleSelectMonth","onSubmitSelect","state","recordsList","sum","selectedYear","selectedMonth","axios","get","then","res","recordsData","setState","a","b","date","calculateSum","catch","error","e","record","preventDefault","_id","window","location","utcDate","Date","localDate","getTime","getTimezoneOffset","dateFormat","dataList","parseFloat","target","onSubmit","id","onChange","selected","type","modal","contentStyle","width","trigger","close","onClick","getLocalFormatDate","notes","pathname","updateProps","deleteRecord","AddRecords","onChangeDate","onChangeAmount","onChangeCategory","onChangeNotes","toISOString","split","post","placeholder","required","UpdateRecords","originDate","originAmount","originCategory","originNotes","App","path","exact","component","AddRecord","UpdateRecord","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a4b7f2fe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { slide as Menu } from 'react-burger-menu'\n\nclass Navbar extends Component {\n    // showSettings (event) {\n    //     event.preventDefault();\n    // }\n\n    render() {\n        return(\n        <nav className=\"sidenav\">\n            <ul>\n            <li><Link to=\"/\">My Money Manager</Link></li>\n            <br/><br/><br/>\n            <li><Link to=\"/create\">Add Expense</Link></li>\n            </ul>\n    {/* <Link to=\"/\">My Money Manager</Link> <br/>\n    <Link to=\"/create\">Add Expense</Link> */}\n        </nav>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport * as d3 from 'd3'\n\nclass Charts extends Component {\n    constructor(props) {\n        super(props);\n\n        this.data = props.datalist;\n        this.month = props.month;\n        this.year = props.year;\n        this.total = 0;\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    getClassifiedData() {\n        var countMap = {};\n        var retList = [];\n        var total = 0;\n        this.data.forEach(item => {\n            countMap[item.category] ? \n                (countMap[item.category] = countMap[item.category] + item.amount) : \n                (countMap[item.category] = item.amount);\n            total = total + item.amount;\n        });\n        this.total = total;\n        for (var category in countMap) {\n            var count = countMap[category];\n            var percentage = (count / total) * 100;\n            retList.push({\"name\": category, \"count\": count.toFixed(2), \"percentage\" : percentage.toFixed(2)})\n        }\n        return retList;\n    }\n\n    drawChart() {\n        const classifiedData = this.getClassifiedData();\n        console.log(this.data);\n        console.log(classifiedData);\n        const svgWidth = 800;\n        const svgHeight = 600;\n        const margin = 10;\n\n        var pie = d3.pie().sort(null).value(d => d.count);\n\n        var radius = Math.min(svgWidth, svgHeight) / 2 - margin;\n\n        const pieSvg = d3.select(this.refs.pieChart)\n            .append(\"svg\").attr(\"width\", svgWidth).attr(\"height\", svgHeight)\n            .append(\"g\").attr(\"transform\", \"translate(\" + svgWidth * 0.4 + \",\" + svgHeight / 2 + \")\");\n\n        // set the color scale\n        var color = d3.scaleOrdinal()\n            .domain(classifiedData.map(d => d.name))\n            .range(d3.quantize(t => d3.interpolateSpectral(t * 0.6 + 0.1), classifiedData.length + 1).reverse());\n            //.range(d3.quantize(d3.interpolate(\"red\", \"blue\"), classifiedData.length + 1));\n\n        // set path for pie char\n        var arc = d3.arc()\n            .innerRadius(100)         // This is the size of the donut hole\n            .outerRadius(radius);\n        \n        // set path for label\n        var arcLabel = d3.arc()\n            .innerRadius(radius * 0.82) \n            .outerRadius(radius * 0.82);\n\n        var data_ready = pie(classifiedData)\n\n        // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n        pieSvg.selectAll('allPies')\n            .data(data_ready).enter()\n            .append('path')\n                .attr('d', arc)\n                .attr('fill', function(d){ return(color(d.data.name))}) \n                .attr(\"stroke\", \"white\")                 \n        \n        pieSvg.append(\"g\")\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"font-size\", 15)\n            .attr(\"text-anchor\", \"middle\")\n            .selectAll(\"text\")\n            .data(data_ready)\n            .join(\"text\")\n                .attr(\"transform\", d => `translate(${arcLabel.centroid(d)})`)\n                .call(text => text.append(\"tspan\")\n                    .attr(\"y\", \"-0.4em\")\n                    .attr(\"font-weight\", \"bold\")\n                    .text(d => d.data.name))\n                .call(text => text.append(\"tspan\")\n                    .attr(\"x\", 0)\n                    .attr(\"y\", \"0.8em\")\n                    .attr(\"font-size\", 14)\n                    .text(d => '$ ' + d.data.count))\n                .call(text => text.append(\"tspan\")\n                    .attr(\"x\", 0)\n                    .attr(\"y\", \"1.9em\")\n                    .attr(\"font-size\", 14)\n                    .text(d => d.data.percentage + '%'));\n\n        pieSvg.append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-weight\", \"bold\")\n            .attr(\"font-size\", 24)\n            .attr(\"dy\", \"0em\")\n            .text(\"Total Expense\");\n        pieSvg.append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"dy\", \"1.4em\")\n            .attr(\"font-size\", 20)\n            .text(\"$ \" + this.total.toFixed(2))\n        \n    }\n    getMonth(num) {\n        const monthMap = {\"0\":'ALL', \"1\":\"January\", \"2\":\"February\", \"3\":\"March\", \"4\":\"April\", \"5\":\"May\", \"6\":\"June\",\n            \"7\":\"July\", \"8\":\"August\", \"9\":\"September\", \"10\":\"October\", \"11\":\"November\", \"12\":\"December\"};\n        return monthMap[num];\n    }\n    render() {\n        return(\n        <div className=\"pie_chart\">\n            <h1>Expenses Summary</h1>\n            <div className=\"show_year_month\">\n                YEAR: &nbsp; {parseInt(this.year) === 0 ? 'All' : this.year} &nbsp;&nbsp;\n                MONTH: &nbsp; {this.getMonth(this.month)}\n            </div>\n            <div ref=\"pieChart\"></div>\n        </div>\n        )\n    }\n}\nexport default Charts;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport dateFormat from 'dateformat';\nimport { Link } from 'react-router-dom';\nimport Popup from \"reactjs-popup\";\nimport Charts from \"./chart.component\";\n\nclass Record extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelectYear = this.handleSelectYear.bind(this);\n        this.handleSelectMonth = this.handleSelectMonth.bind(this);\n        \n        this.onSubmitSelect = this.onSubmitSelect.bind(this);\n\n        this.state = {\n            recordsList: [],\n            sum: 0,\n            selectedYear: 0,\n            selectedMonth: 0\n        }\n    }\n\n    componentDidMount() {\n        axios.get(\"http://127.0.0.1:3003/record\")\n        //axios.get(\"/record\")\n            .then(res => {\n                const recordsData = res.data;\n                console.log(recordsData);\n                this.setState({\n                    recordsList : recordsData.sort((a,b) => (a.date > b.date) ? 1: -1),\n                    sum: this.calculateSum(recordsData)\n                });\n            })\n            .catch(error => {\n                console.log(\"loading records failed..\")\n                console.log(error)\n            })\n    }\n\n    deleteRecord(e, record) {\n        e.preventDefault();\n\n        axios.get('http://localhost:3003/record/delete/' + record._id)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n        window.location = '/';\n    }\n\n    getLocalFormatDate(d) {\n        const utcDate = new Date(d);\n        const localDate = new Date(utcDate.getTime() + utcDate.getTimezoneOffset() * 60000);\n        return dateFormat(localDate, \"ddd mmm dd, yyyy\");\n    }\n\n    calculateSum(dataList) {\n        var sum = 0;\n        dataList.forEach(item => {\n            sum = sum + parseFloat(item.amount);\n        });\n        return sum;\n    }\n\n    handleSelectYear(e) {\n        this.setState({\n            selectedYear: e.target.value\n        });\n    }\n\n    handleSelectMonth(e) {\n        this.setState({\n            selectedMonth: e.target.value\n        });\n    }\n\n    onSubmitSelect(e) {\n        e.preventDefault();\n\n        axios.get(\"http://localhost:3003/record/yearMonth/\" + this.state.selectedYear + \"/\" + this.state.selectedMonth)\n            .then(res => {\n                const recordsData = res.data;\n                console.log(recordsData);\n                this.setState({\n                    recordsList : recordsData.sort((a,b) => (a.date > b.date) ? 1: -1),\n                    sum: this.calculateSum(recordsData)\n                });\n            })\n    }\n\n    render() {\n        return(\n        <div className=\"record\">\n            <h1>Money Manager</h1>\n            <form onSubmit={this.onSubmitSelect}>\n                <label>Select Year: </label>\n                <select id=\"year\" name=\"year\" value={this.state.selectedYear} onChange={this.handleSelectYear}>\n                    <option value=\"0\" selected>Select All</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                    <option value=\"2018\">2018</option>\n                    <option value=\"2017\">2017</option>\n                    <option value=\"2016\">2016</option>\n                    <option value=\"2015\">2015</option>\n                    <option value=\"2014\">2014</option>\n                    <option value=\"2013\">2013</option>\n                    <option value=\"2012\">2012</option>\n                    <option value=\"2011\">2011</option>\n                    <option value=\"2010\">2010</option>\n                </select>\n                <label>Select Month: </label>\n                <select id=\"month\" name=\"month\" onChange={this.handleSelectMonth}>\n                    <option value=\"0\" selected>Select All</option>\n                    <option value=\"1\">JAN</option>\n                    <option value=\"2\">FEB</option>\n                    <option value=\"3\">MAR</option>\n                    <option value=\"4\">APR</option>\n                    <option value=\"5\">MAY</option>\n                    <option value=\"6\">JUN</option>\n                    <option value=\"7\">JUL</option>\n                    <option value=\"8\">AUG</option>\n                    <option value=\"9\">SEP</option>\n                    <option value=\"10\">OCT</option>\n                    <option value=\"11\">NOV</option>\n                    <option value=\"12\">DEC</option>\n                </select>\n                <input className=\"submit\" type=\"submit\" value=\"Submit\"></input>\n            </form>\n            <div className=\"expense_sum\">\n                <label>total expense: </label>\n                <span>{'$' + this.state.sum.toFixed(2)}</span>\n                <Popup modal contentStyle={{width: \"80%\"}}\n                trigger={<button> Show Expense Chart</button>}>{ close => (\n                    <div className=\"modal\">\n                    <div className=\"close\" onClick={close}>&times;</div>\n                    <Charts datalist={this.state.recordsList} month={this.state.selectedMonth} year={this.state.selectedYear}/>\n                    </div>\n                )}</Popup>\n            </div>\n            <table className=\"records_table\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th className='desc-h-col'>DATE</th>\n                        <th className='desc-h-col'>AMOUNT</th>\n                        <th className='desc-h-col'>CATEGORY</th>\n                        <th className='desc-h-col'>NOTES</th>\n                        <th className='button-col'></th>\n                        <th className='button-col'></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.recordsList.map(record =>\n                        <tr>\n                            <td className='counterCell'></td>\n                            <td className='desc-col' id='table_date'>{this.getLocalFormatDate(record.date)}</td>\n                            <td className='desc-col' id='table_amount'>$ {record.amount.toFixed(2)}</td>\n                            <td className='desc-col' id='table_category'>{record.category}</td>\n                            <td className='desc-col'>{record.notes}</td>\n                            <td className='button-col'>\n                                <Link to={\n                                    {\n                                        pathname: '/update',\n                                        updateProps: record\n                                    }\n                                }><button>update</button></Link>\n                            </td>\n                            <td className='button-col'><button onClick = {(e) => {this.deleteRecord(e, record)}}>delete</button></td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n    }\n}\n\nexport default Record;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass AddRecords extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onChangeAmount = this.onChangeAmount.bind(this);\n        this.onChangeCategory = this.onChangeCategory.bind(this);\n        this.onChangeNotes = this.onChangeNotes.bind(this);\n        \n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            date: '',\n            amount: '',\n            category: 'Food',\n            notes: ''\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            date: new Date().toISOString().split('T')[0]\n        });\n    }\n\n    onChangeDate(e) {\n        this.setState({\n            date: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeCategory(e) {\n        this.setState({\n            category: e.target.value\n        });\n    }\n\n    onChangeNotes(e) {\n        this.setState({\n            notes: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const record = {\n            date: this.state.date,\n            amount: this.state.amount,\n            category: this.state.category,\n            notes: this.state.notes\n        }\n        axios.post('http://localhost:3003/record/add', record)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n\n        window.location = '/';\n    }\n\n    render() {\n        return(\n            <div className=\"record\">\n            <h2>Add Expense</h2>\n            <form id=\"add_record_form\" onSubmit={this.onSubmit}>\n                <div className=\"form-field\">\n                    <label>Date </label>\n                    <input type=\"date\" name=\"date\" placeholder=\"\" value={this.state.date} onChange={this.onChangeDate} required />\n                </div>\n                <div className=\"form-field\">\n                    <label>Amount </label>\n                    <input type=\"number\" name=\"amount\" placeholder=\"\" value={this.state.amount} onChange={this.onChangeAmount} required/>\n                </div>\n                <div className=\"form-field\">\n                    <label>Category </label>\n                    <select id=\"categories\" name=\"category\" value={this.state.category} onChange={this.onChangeCategory}>\n                        <option value=\"Food\">Food</option>\n                        <option value=\"Transportation\">Transportation</option>\n                        <option value=\"Household\">Household</option>\n                        <option value=\"Apparel\">Apparel</option>\n                        <option value=\"Beauty\">Beauty</option>\n                        <option value=\"Health\">Health</option>\n                        <option value=\"Education\">Education</option>\n                        <option value=\"Gift\">Gift</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                </div>\n                <div className=\"form-field\">\n                    <label>Notes </label>\n                    <input type=\"text\" name=\"notes\" placeholder=\"\" value={this.state.notes} onChange={this.onChangeNotes}/>\n                </div>\n                <input className=\"submit\" type=\"submit\" value=\"Submit\"></input>\n            </form>\n            </div>\n        )\n    }\n}\n\nexport default AddRecords;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass UpdateRecords extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onChangeAmount = this.onChangeAmount.bind(this);\n        this.onChangeCategory = this.onChangeCategory.bind(this);\n        this.onChangeNotes = this.onChangeNotes.bind(this);\n        \n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            id: props.location.updateProps._id,\n            date: '',\n            amount: '',\n            category: '',\n            notes: '',\n            originDate: new Date(props.location.updateProps.date),\n            originAmount: props.location.updateProps.amount,\n            originCategory: props.location.updateProps.category,\n            originNotes: props.location.updateProps.notes\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            date: this.state.originDate.toISOString().split('T')[0],\n            amount: this.state.originAmount,\n            category: this.state.originCategory,\n            notes: this.state.originNotes\n        });\n    }\n\n    onChangeDate(e) {\n        this.setState({\n            date: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeCategory(e) {\n        this.setState({\n            category: e.target.value\n        });\n    }\n\n    onChangeNotes(e) {\n        this.setState({\n            notes: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const record = {\n            date: this.state.date,\n            amount: this.state.amount,\n            category: this.state.category,\n            notes: this.state.notes\n        }\n        axios.post('http://localhost:3003/record/update/' + this.state.id, record)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n\n        window.location = '/';\n    }\n\n    render() {\n        return(\n            <div className=\"record\">\n            <h2>Update Expense</h2>\n            <form id=\"update_record_form\" onSubmit={this.onSubmit}>\n                <div className=\"form-field\">\n                    <label>Date </label>\n                    <input type=\"date\" name=\"date\" placeholder=\"\" value={this.state.date} onChange={this.onChangeDate} required />\n                </div>\n                <div className=\"form-field\">\n                    <label>Amount </label>\n                    <input type=\"number\" name=\"amount\" placeholder=\"\" value={this.state.amount} onChange={this.onChangeAmount} required/>\n                </div>\n                <div className=\"form-field\">\n                    <label>Category </label>\n                    <select id=\"categories\" name=\"category\" value={this.state.category} onChange={this.onChangeCategory}>\n                        <option value=\"Food\">Food</option>\n                        <option value=\"Transportation\">Transportation</option>\n                        <option value=\"Household\">Household</option>\n                        <option value=\"Apparel\">Apparel</option>\n                        <option value=\"Beauty\">Beauty</option>\n                        <option value=\"Health\">Health</option>\n                        <option value=\"Education\">Education</option>\n                        <option value=\"Gift\">Gift</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                </div>\n                <div className=\"form-field\">\n                    <label>Notes </label>\n                    <input type=\"text\" name=\"notes\" placeholder=\"\" value={this.state.notes} onChange={this.onChangeNotes} />\n                </div>\n                <input className=\"submit\" type=\"submit\" value=\"Submit\"></input>\n            </form>\n            </div>\n        )\n    }\n}\n\nexport default UpdateRecords;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nimport Navbar from \"./components/navbar.component\";\nimport Record from \"./components/record.component\";\nimport AddRecord from \"./components/add-record.component\";\nimport UpdateRecord from \"./components/update-record.component\";\n\nfunction App() {\n  return (\n    <Router>\n          <Navbar />\n          <Route path=\"/\" exact component={Record} />\n          <Route path=\"/create\" exact component={AddRecord} />\n          <Route path=\"/update\" exact component={UpdateRecord} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}