{"ast":null,"code":"var _jsxFileName = \"/Users/mengjiang/Desktop/yuki_webprogram/web2/web2_final/src/components/chart.component.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass Charts extends Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     data: props.datalist\n    // }\n\n    this.data = props.datalist;\n    this.month = props.month;\n    this.year = props.year;\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  getAmount(item) {\n    return item.amount;\n  }\n\n  getClassifiedData() {\n    var countMap = {};\n    this.data.forEach(item => {\n      countMap[item.category] ? countMap[item.category]++ : countMap[item.category] = 1;\n    });\n    return countMap;\n  }\n\n  drawChart() {\n    const classifiedData = this.getClassifiedData();\n    console.log(this.data);\n    console.log(classifiedData);\n    const svgWidth = 1200;\n    const svgHeight = 600;\n    const margin = 50; // const amount = this.data.map(this.getAmount);\n\n    var radius = Math.min(svgWidth, svgHeight) / 2 - margin;\n    const pieSvg = d3.select(this.refs.pie).append(\"svg\").attr(\"width\", svgWidth).attr(\"height\", svgHeight).append(\"g\").attr(\"transform\", \"translate(\" + svgWidth / 2 + \",\" + svgHeight / 2 + \")\"); // set the color scale\n\n    var color = d3.scaleOrdinal().domain(classifiedData).range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"]); // Compute the position of each group on the pie:\n\n    var pie = d3.pie().value(function (d) {\n      return d.value;\n    });\n    var data_ready = pie(d3.entries(classifiedData)); // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n\n    pieSvg.selectAll('whatever').data(data_ready).enter().append('path').attr('d', d3.arc().innerRadius(100) // This is the size of the donut hole\n    .outerRadius(radius)).attr('fill', function (d) {\n      return color(d.data.key);\n    }).attr(\"stroke\", \"black\").style(\"stroke-width\", \"2px\").style(\"opacity\", 0.7);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pie_chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Expenses Summary\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"show_year_month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"YEAR: \", this.year == '0' ? 'All' : this.year), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"MONTH: \", this.month == '0' ? 'All' : this.month)), /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"pie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Charts;","map":{"version":3,"sources":["/Users/mengjiang/Desktop/yuki_webprogram/web2/web2_final/src/components/chart.component.js"],"names":["React","Component","d3","Charts","constructor","props","data","datalist","month","year","componentDidMount","drawChart","getAmount","item","amount","getClassifiedData","countMap","forEach","category","classifiedData","console","log","svgWidth","svgHeight","margin","radius","Math","min","pieSvg","select","refs","pie","append","attr","color","scaleOrdinal","domain","range","value","d","data_ready","entries","selectAll","enter","arc","innerRadius","outerRadius","key","style","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3'\n\nclass Charts extends Component {\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     data: props.datalist\n        // }\n\n        this.data = props.datalist;\n        this.month = props.month;\n        this.year = props.year;\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    getAmount(item) {\n        return item.amount;\n    }\n\n    getClassifiedData() {\n        var countMap = {};\n        this.data.forEach(item => {\n            countMap[item.category] ? countMap[item.category]++  : countMap[item.category] = 1;\n        });\n        return countMap;\n    }\n\n    drawChart() {\n        const classifiedData = this.getClassifiedData();\n        console.log(this.data);\n        console.log(classifiedData);\n        const svgWidth = 1200;\n        const svgHeight = 600;\n        const margin = 50;\n        // const amount = this.data.map(this.getAmount);\n\n        var radius = Math.min(svgWidth, svgHeight) / 2 - margin;\n\n        const pieSvg = d3.select(this.refs.pie)\n            .append(\"svg\").attr(\"width\", svgWidth).attr(\"height\", svgHeight)\n            .append(\"g\").attr(\"transform\", \"translate(\" + svgWidth / 2 + \",\" + svgHeight / 2 + \")\");\n\n        // set the color scale\n        var color = d3.scaleOrdinal()\n        .domain(classifiedData)\n        .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"])\n\n        // Compute the position of each group on the pie:\nvar pie = d3.pie()\n.value(function(d) {return d.value; })\nvar data_ready = pie(d3.entries(classifiedData))\n\n// Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\npieSvg\n.selectAll('whatever')\n.data(data_ready)\n.enter()\n.append('path')\n.attr('d', d3.arc()\n  .innerRadius(100)         // This is the size of the donut hole\n  .outerRadius(radius)\n)\n.attr('fill', function(d){ return(color(d.data.key)) })\n.attr(\"stroke\", \"black\")\n.style(\"stroke-width\", \"2px\")\n.style(\"opacity\", 0.7)\n        \n    }\n    \n    render() {\n        return(\n        <div className=\"pie_chart\">\n            <h1>Expenses Summary</h1>\n            <div className=\"show_year_month\">\n                <span>YEAR: {this.year == '0' ? 'All' : this.year}</span>\n                <span>MONTH: {this.month == '0' ? 'All' : this.month}</span>\n            </div>\n            <div ref=\"pie\"></div>\n        </div>\n        )\n    }\n}\nexport default Charts;"]},"metadata":{},"sourceType":"module"}